# This workflow will parse the grant application, get needed data, and then send an email to the grant submitter
#
# For now I am just testing that I can parse the file and save the info into a variable.  Delete this when working. :-)

name: SendThankYouMessage

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  # Delete this when working - this is how we will test for now... DELETE
  workflow_dispatch:
  
jobs:
  parse-application:
    runs-on: ubuntu-latest
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
      - uses: actions/checkout@v3
        
      # Parse the application template for the email account
      - name: Parse the application template
        run: /bin/grep "**Contact Email:**" applications/oci-transaction-lifecycle.md | cut -d" " -f4
        
      # Parse the application template for the email account
      - name: assign the env from the email name
        run: export APP_EMAIL=`/bin/grep "**Contact Email:**" applications/oci-transaction-lifecycle.md | cut -d" " -f4`
        
      - run: echo "::set-env name=APP_EMAIL::$APP_EMAIL"
      
      # Now echo the saved ENV name
      - name: Echo the email name
        run: echo "the email name is ${APP_EMAIL} from the application - single step"
        
      # Get the email and then echo it in a separate line, Mutliple steps
      - name: Parse and then echo in multiple steps
        run: |
          export APP_EMAIL=`/bin/grep "**Contact Email:**" applications/oci-transaction-lifecycle.md | cut -d" " -f4`
          echo "Multi-step: the email name is ${APP_EMAIL} from the application"
      
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          ls -la
       
       
